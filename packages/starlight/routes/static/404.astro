---
import { getEntry } from 'astro:content';
import config from 'virtual:starlight/user-config';
import {
	normalizeCollectionEntry,
	type Route,
	type StarlightDocsCollectionEntry,
	type StarlightDocsEntry,
} from '../../utils/routing';
import { BuiltInDefaultLocale } from '../../utils/i18n';
import CommonPage from '../common.astro';

export const prerender = true;

const { lang = BuiltInDefaultLocale.lang, dir = BuiltInDefaultLocale.dir } =
	config.defaultLocale || {};
let locale = config.defaultLocale?.locale;
if (locale === 'root') locale = undefined;

const entryMeta = { dir, lang, locale };

const fallbackEntry: StarlightDocsEntry = {
	slug: '404',
	id: '404',
	body: '',
	collection: 'docs',
	data: {
		title: '404',
		template: 'splash',
		editUrl: false,
		head: [],
		hero: { tagline: Astro.locals.t('404.text'), actions: [] },
		pagefind: false,
		sidebar: { hidden: false, attrs: {} },
		draft: false,
	},
	// TODO(HiDeoo) When the docs content collection path is configurable, this should be refactored.
	filePath: 'src/content/docs/404.md',
};

const userEntry = (await getEntry('docs', '404')) as StarlightDocsCollectionEntry;
const entry = userEntry ? normalizeCollectionEntry(userEntry) : fallbackEntry;
const route: Route = { ...entryMeta, entryMeta, entry, id: entry.id, slug: entry.slug };
---

<CommonPage {route} />
